<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GCSeries</name>
    </assembly>
    <members>
        <member name="T:GCSeries.BaseSystem">
            -------------------------------------------------------------------------------------------------
             <summary>
             整个系统的基本坐标，放在世界中心的基本系统。
             这个系统的底边为倾斜旋转轴，底边坐标为0，最终的坐标结果都在此基础上根据锚点变换而来.
             </summary>
            
             <remarks> Dx, 2018/2/28. </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="P:GCSeries.BaseSystem.penRay">
            <summary>
            笔的射线
            </summary>
        </member>
        <member name="P:GCSeries.BaseSystem.penRotation">
            <summary>
            当前笔的旋转,其中它自己z轴为正前方.
            </summary>
        </member>
        <member name="P:GCSeries.BaseSystem.penPosition">
            <summary>
            当前笔的坐标
            </summary>
        </member>
        <member name="P:GCSeries.BaseSystem.penDirection">
            <summary>
            笔的射线方向
            </summary>
        </member>
        <member name="P:GCSeries.BaseSystem.penMatrix4x4">
            <summary>
            当前笔的矩阵
            </summary>
        </member>
        <member name="P:GCSeries.BaseSystem.glassPosition">
            <summary>
            当前眼镜的坐标
            </summary>
        </member>
        <member name="P:GCSeries.BaseSystem.glassRotation">
            <summary>
            当前眼镜的旋转,其中它自己z轴为正前方.
            </summary>
        </member>
        <member name="P:GCSeries.BaseSystem.glassRotation_horizontal">
            <summary>
            当前眼镜的旋转限制在水平.
            </summary>
        </member>
        <member name="P:GCSeries.BaseSystem.eyeLeftPosition">
            <summary>
            检测系统的左眼坐标
            </summary>
        </member>
        <member name="P:GCSeries.BaseSystem.eyeRightPosition">
            <summary>
            检测系统的右眼坐标
            </summary>
        </member>
        <member name="F:GCSeries.BaseSystem.screenPoint">
            <summary>
            屏幕的四个角点的位置坐标
            </summary>
        </member>
        <member name="M:GCSeries.BaseSystem.updateScreenPoint">
            <summary>
            更新屏幕的四个角
            </summary>
        </member>
        <member name="T:GCSeries.Screen4Point">
            <summary>
            屏幕的四个角点的位置坐标数据
            </summary>
        </member>
        <member name="F:GCSeries.Screen4Point.width">
            <summary>
            屏幕宽
            </summary>
        </member>
        <member name="F:GCSeries.Screen4Point.height">
            <summary>
            屏幕高
            </summary>
        </member>
        <member name="F:GCSeries.Screen4Point.slant">
            <summary>
            屏幕的倾斜角
            </summary>
        </member>
        <member name="T:GCSeries.Camera3D">
            -------------------------------------------------------------------------------------------------
             <summary>
             这是一个临时的3d视觉实现【仅供内部使用】。
             在这个表示3d眼镜的物体下放三个相机的子节点，分别是中央相机，左眼相机，右眼相机.
             </summary>
            
             <remarks> Dx, 2017/11/2. </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:GCSeries.Camera3D.cam_c">
            <summary>
            中央相机，场景中物体命名为"cam_c"
            </summary>
        </member>
        <member name="F:GCSeries.Camera3D.cam_l">
            <summary>
            中央相机，场景中物体命名为"cam_l"
            </summary>
        </member>
        <member name="F:GCSeries.Camera3D.cam_r">
            <summary>
            中央相机，场景中物体命名为"cam_r"
            </summary>
        </member>
        <member name="F:GCSeries.Camera3D.originalProjection">
            <summary>
            原始的投影矩阵
            </summary>
        </member>
        <member name="M:GCSeries.Camera3D.setCameraProjMat(UnityEngine.Camera,UnityEngine.Vector3)">
            -------------------------------------------------------------------------------------------------
             <summary> 设置相机投影矩阵. </summary>
            
             <remarks> Dx, 2017/11/7. </remarks>
            
             <param name="cam"> The camera. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:GCSeries.DragRecord">
            <summary>
            一次拖拽记录的数据类
            </summary>
        </member>
        <member name="M:GCSeries.DragRecord.#ctor(UnityEngine.Transform,System.Single)">
            <summary>
            构造，依赖FCore中的当前笔状态数据
            </summary>
            <param name="dragObj">拖拽物体</param>
        </member>
        <member name="F:GCSeries.DragRecord.dragObj">
            <summary>
            拖拽物体
            </summary>
        </member>
        <member name="E:GCSeries.DragRecord.EventStopDrag">
            <summary>
            停止拖拽的事件
            </summary>
        </member>
        <member name="F:GCSeries.DragRecord.isCtrlRotation">
            <summary>
            是否控制拖拽物体的旋转(未测，不要使用这个功能)
            </summary>
        </member>
        <member name="F:GCSeries.DragRecord.isStop">
            <summary>
            是否停止拖拽
            </summary>
        </member>
        <member name="P:GCSeries.DragRecord.distanceScale">
            <summary>
            距离的缩放控制，用于拉远拉近 distance * distanceScale来控制
            </summary>
        </member>
        <member name="P:GCSeries.DragRecord.distance">
            <summary>
            抓取点到笔尖的距离
            </summary>
        </member>
        <member name="M:GCSeries.DragRecord.SetStopWhenKeyUp(System.Int32)">
            <summary>
            设置由哪个按键抬起来终止拖拽，产生Stop Event.
            key值为0,1,2
            </summary>
            <param name="key">按键值0,1,2</param>
        </member>
        <member name="M:GCSeries.DragRecord.SetStopWhenKeyUp(System.Action{GCSeries.DragRecord},System.Int32)">
            <summary>
            设置由哪个按键抬起来终止拖拽，产生Stop Event,并且设置回调。
            key值为0,1,2
            </summary>
            <param name="proc"></param>
            <param name="key">按键值0,1,2</param>
            <returns></returns>
        </member>
        <member name="M:GCSeries.DragRecord.OnKeyUp">
            <summary>
            响应事件的抬起
            </summary>
        </member>
        <member name="M:GCSeries.DragRecord.Update">
            <summary>
            使用当前的笔状态去更新这个拖拽物体的位置
            </summary>
        </member>
        <member name="T:GCSeries.FCore">
            <summary>
            整个一体机的主要功能都被放到了这个静态类中
            </summary>
        </member>
        <member name="F:GCSeries.FCore.ViewerScale">
            <summary>
            由于场景比例很小，所以加入一个这个缩放比例，用来调整笔在U3D的坐标位置的缩放。
            当笔的移动距离太小无法适应场景的时候，调整这个缩放值更大一些。
            </summary>
        </member>
        <member name="F:GCSeries.FCore.anchorRTS">
            <summary>
            整个系统的锚点的RTS
            </summary>
        </member>
        <member name="F:GCSeries.FCore.anchorRMat">
            <summary>
            整个系统锚点的旋转矩阵
            </summary>
        </member>
        <member name="F:GCSeries.FCore.anchorRQuat">
            <summary>
             整个系统锚点的旋转
            </summary>
        </member>
        <member name="P:GCSeries.FCore.penRay">
            <summary>
            笔的射线
            </summary>
        </member>
        <member name="P:GCSeries.FCore.penRotation">
            <summary>
            当前笔的旋转,其中它自己z轴为正前方.
            </summary>
        </member>
        <member name="P:GCSeries.FCore.penPosition">
            <summary>
            当前笔的坐标
            </summary>
        </member>
        <member name="P:GCSeries.FCore.penDirection">
            <summary>
            笔的射线方向
            </summary>
        </member>
        <member name="P:GCSeries.FCore.glassPosition">
            <summary>
            当前眼镜的坐标
            </summary>
        </member>
        <member name="P:GCSeries.FCore.glassRotation">
            <summary>
            当前眼镜的旋转,其中它自己z轴为正前方.
            </summary>
        </member>
        <member name="P:GCSeries.FCore.glassRotation_horizontal">
            <summary>
            当前眼镜的旋转限制在水平.
            </summary>
        </member>
        <member name="P:GCSeries.FCore.eyeLeftPosition">
            <summary>
            左眼摄像机坐标
            </summary>
        </member>
        <member name="P:GCSeries.FCore.eyeRightPosition">
            <summary>
            右眼摄像机坐标
            </summary>
        </member>
        <member name="P:GCSeries.FCore.isKey0Down">
            <summary>
            此时是否按键0（左侧键）已经按下
            </summary>
        </member>
        <member name="P:GCSeries.FCore.isKey1Down">
            <summary>
            此时是否按键1（靠前键）已经按下
            </summary>
        </member>
        <member name="P:GCSeries.FCore.isKey2Down">
            <summary>
            此时是否按键2（靠后键）已经按下
            </summary>
        </member>
        <member name="P:GCSeries.FCore.isDraging">
            <summary>
             当前是否在正在拖拽状态
            </summary>
        </member>
        <member name="P:GCSeries.FCore.lastDragDistance">
            <summary>
            最后一次拖拽物体到笔尖的距离
            </summary>
        </member>
        <member name="M:GCSeries.FCore.addDragObj(UnityEngine.GameObject,System.Single,System.Boolean)">
            <summary>
            添加一个拖拽物体.
            </summary>
            <param name="go">             要添加的物体. </param>
            <param name="distance">       拖拽的碰撞点坐标的距离. </param>
            <param name="isCtrlRotation"> (Optional)是否控制这个拖拽物体的旋转(如果不控制物体旋转，
                                          那么在中心点和碰撞体中心不一致时会出现物体跑飞) </param>
            <returns> 返回一个. </returns>
        </member>
        <member name="M:GCSeries.FCore.updateDragObj">
            <summary>
            更新所有拖拽物体的位置状态
            </summary>
        </member>
        <member name="M:GCSeries.FCore.deleteDragObj(UnityEngine.GameObject)">
            <summary>
            删除拖拽物体
            </summary>
        </member>
        <member name="M:GCSeries.FCore.clearDragObj">
            <summary>
            清空所有的拖拽物体
            </summary>
        </member>
        <member name="M:GCSeries.FCore.pullDragObj(UnityEngine.GameObject,System.Single)">
            <summary>
            拉近拖拽物体
            </summary>
            <param name="obj">拖拽物体</param>
            <param name="percent">拉近的百分率</param>
        </member>
        <member name="M:GCSeries.FCore.pushDragObj(UnityEngine.GameObject,System.Single)">
            <summary>
            推远拖拽物体
            </summary>
            <param name="obj">拖拽物体</param>
            <param name="percent">推远的百分率</param>
        </member>
        <member name="F:GCSeries.FCore._dictRotate">
            <summary>
            记录所有拖拽物体的字典
            </summary>
        </member>
        <member name="E:GCSeries.FCore.EventKey0Down">
            <summary>
            事件，按键0按下
            </summary>
        </member>
        <member name="E:GCSeries.FCore.EventKey0Up">
            <summary>
            事件，按键0抬起
            </summary>
        </member>
        <member name="E:GCSeries.FCore.EventKey1Down">
            <summary>
            事件，按键1按下
            </summary>
        </member>
        <member name="E:GCSeries.FCore.EventKey1Up">
            <summary>
            事件，按键1抬起
            </summary>
        </member>
        <member name="E:GCSeries.FCore.EventKey2Down">
            <summary>
            事件，按键2按下
            </summary>
        </member>
        <member name="E:GCSeries.FCore.EventKey2Up">
            <summary>
            事件，按键2抬起
            </summary>
        </member>
        <member name="M:GCSeries.FCore.updateKeyEvent">
            <summary>
            用于更新判断发出按键
            </summary>
        </member>
        <member name="M:GCSeries.FCore.PenShake(System.Int32)">
            <summary>
            笔震动
            </summary>
            <param name="mode">震动模式</param>
        </member>
        <member name="M:GCSeries.FCore.SetScreen2D">
            <summary>
            设置所有显示器屏幕为2D
            </summary>
        </member>
        <member name="M:GCSeries.FCore.SetScreen3D">
            <summary>
            设置所有显示器屏幕为3D
            </summary>
        </member>
        <member name="M:GCSeries.FCore.SetScreen3DSelf">
            <summary>
            只设置自己的机器,MR一体机显示器屏幕为3D
            </summary>
        </member>
        <member name="M:GCSeries.FCore.SetScreen2DSelf">
            <summary>
            只设置自己的机器,MR一体机显示器屏幕为2D
            </summary>
        </member>
        <member name="M:GCSeries.FCore.SetScreen3DOther">
            <summary>
            切换一体机以外的屏幕进3d
            </summary>
        </member>
        <member name="M:GCSeries.FCore.SetScreen2DOther">
            <summary>
            切换一体机以外的屏幕进2d
            </summary>
        </member>
        <member name="M:GCSeries.FCore.SetDualScreenExtend">
            <summary>
            设置双屏显示为扩展模式
            </summary>
        </member>
        <member name="M:GCSeries.FCore.SetDualScreenClone">
            <summary>
            设置双屏显示为复制模式
            </summary>
        </member>
        <member name="M:GCSeries.FCore.SetDualScreenStatusBack">
            <summary>
            设置双屏显示为恢复上一次操作前状态
            </summary>
        </member>
        <member name="M:GCSeries.FCore.getCurDualScreenStatus">
            <summary>
            得到当前的双屏状态
            </summary>
        </member>
        <member name="F:GCSeries.FCore.PupilDistance">
            <summary>
            瞳距。默认6cm
            </summary>
        </member>
        <member name="F:GCSeries.FCore.isAutoSlant">
            <summary>
            是否自动设置倾斜。这是一个重要的设置，如果设置了自动倾斜，那么整个系统会和实际一体机和桌面的倾斜角度一致。
            适用于一些模拟桌面的场合，能让u3d中的桌面一直水平。
            </summary>
        </member>
        <member name="P:GCSeries.FCore.screenPointLeftTop">
            <summary>
            屏幕面-左上角坐标
            </summary>
        </member>
        <member name="P:GCSeries.FCore.screenPointRightTop">
            <summary>
            屏幕面-右上角坐标
            </summary>
        </member>
        <member name="P:GCSeries.FCore.screenPointLeftBotton">
            <summary>
            屏幕面-左下角坐标
            </summary>
        </member>
        <member name="P:GCSeries.FCore.screenPointRightBotton">
            <summary>
            屏幕面-右下角坐标
            </summary>
        </member>
        <member name="P:GCSeries.FCore.screenCentre">
            <summary>
            屏幕面-中心坐标
            </summary>
        </member>
        <member name="P:GCSeries.FCore.screenWidth">
            <summary>
            屏幕面-当前宽度
            </summary>
        </member>
        <member name="P:GCSeries.FCore.screenHeight">
            <summary>
            屏幕面-当前高度
            </summary>
        </member>
        <member name="P:GCSeries.FCore.screenRotation">
            <summary>
            屏幕面对应的世界旋转
            </summary>
        </member>
        <member name="P:GCSeries.FCore.slantAngle">
            <summary>
            一体机机身的倾斜角
            </summary>
        </member>
        <member name="P:GCSeries.FCore.slantRotate">
            <summary>
            机身倾斜角所对应旋转变换
            </summary>
        </member>
        <member name="T:GCSeries.MRSystem">
            <summary>
            这个类能够更新OCV数据，这个脚本的优先级可能要放到最前比较好。同时让它作为整个系统的锚点。当开启了自动倾斜的时候，这个系统以底边
            </summary>
        </member>
        <member name="F:GCSeries.MRSystem.isAutoSlant">
            <summary>
            是否应用屏幕的自动倾斜
            </summary>
        </member>
        <member name="F:GCSeries.MRSystem.ViewerScale">
            <summary>
            整个系统的缩放比例
            </summary>
        </member>
        <member name="F:GCSeries.MRSystem.isOptDebug">
            <summary>
            内部调试，不要设置为true.
            </summary>
        </member>
        <member name="M:GCSeries.MRSystem.UpdateInspector">
            <summary>
            响应检视面板改动
            </summary>
        </member>
        <member name="T:GCSeries.DetectPoint">
            -------------------------------------------------------------------------------------------------
             <summary> 一个检测到的小跟踪点. </summary>
            
             <remarks> Xian Dai, 2017/5/6. </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:GCSeries.DetectPoint.targetPoint">
            <summary> 结果点的坐标. </summary>
        </member>
        <member name="F:GCSeries.DetectPoint.credibility">
            <summary> 这个点的可信度，规定如果小于等于0那么就不算检测到. </summary>
        </member>
        <member name="F:GCSeries.DetectPoint.d">
            <summary> 距离误差. </summary>
        </member>
        <member name="F:GCSeries.DetectPoint.direction1">
            <summary> 四个摄像机看这个点的射线方向. </summary>
        </member>
        <member name="F:GCSeries.CamRay.credibility">
            <summary> 这个点的可信度，如果为0则忽略 </summary>
        </member>
        <member name="F:GCSeries.CamRay.camIndex">
            <summary> 相机的编号. </summary>
        </member>
        <member name="F:GCSeries.CamRay.origin">
            <summary> 射线的原点坐标. </summary>
        </member>
        <member name="F:GCSeries.CamRay.direction">
            <summary> 射线的方向. </summary>
        </member>
        <member name="T:GCSeries.CameraStatus">
            -------------------------------------------------------------------------------------------------
             <summary> 监测出来的摄像机状态. </summary>
            
             <remarks> Xian Dai, 2017/5/6. </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:GCSeries.CameraStatus.index">
            <summary>这个相机的序号,目前应该是0-3，一共4个. </summary>
        </member>
        <member name="F:GCSeries.CameraStatus.status">
            <summary> 检测状态，1表示成功定位自身，0表示丢失自身，2表示使用手动输入值. </summary>
        </member>
        <member name="F:GCSeries.CameraStatus.width">
            <summary> 相机的像素宽度. </summary>
        </member>
        <member name="F:GCSeries.CameraStatus.height">
            <summary> 相机的像素高度. </summary>
        </member>
        <member name="F:GCSeries.CameraStatus.Position">
            <summary> 自身坐标. </summary>
        </member>
        <member name="F:GCSeries.CameraStatus.rotation">
            <summary> 自身旋转. </summary>
        </member>
        <member name="F:GCSeries.CameraStatus.rotationZXY">
            <summary> 自身旋转(使用u3d的zxy旋转的欧拉角表示). </summary>
        </member>
        <member name="F:GCSeries.CameraStatus.ViewFieldDirection1">
            <summary> 相机的视场方向向量,4个边角点作出. </summary>
        </member>
        <member name="M:GCSeries.CameraStatus.SetCamera(UnityEngine.Transform)">
            <summary>
            根据这个结构体内容来设置摄像机的显示状态，坐标/旋转/是否显示
            </summary>
            <param name="cam">要被设置状态的摄像机</param>
        </member>
        <member name="T:GCSeries.CameraStatusx4">
            -------------------------------------------------------------------------------------------------
             <summary> A camera statusx 4. </summary>
            
             <remarks> Dx, 2017/7/18. </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="T:GCSeries.U3DCamera">
            -------------------------------------------------------------------------------------------------
             <summary> U3D相机的数据设置. </summary>
            
             <remarks> Dx, 2017/11/1. </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:GCSeries.U3DCamera.Position">
            <summary> 相机的世界坐标. </summary>
        </member>
        <member name="F:GCSeries.U3DCamera.rotation">
            <summary> 相机的世界旋转. </summary>
        </member>
        <member name="F:GCSeries.U3DCamera.fov">
            <summary> FOV. </summary>
        </member>
        <member name="F:GCSeries.ocvdata.ocvdataVersion">
            <summary> ocv数据版本. </summary>
        </member>
        <member name="F:GCSeries.ocvdata.cam_s">
            <summary> 4个相机数据. </summary>
        </member>
        <member name="F:GCSeries.ocvdata.GlassStatus">
            <summary> 眼镜的检测状态. </summary>
        </member>
        <member name="F:GCSeries.ocvdata.GlassPosition">
            <summary> 眼镜坐标. </summary>
        </member>
        <member name="F:GCSeries.ocvdata.GlassPosition_w">
            <summary> 眼镜坐标(考虑机身倾角). </summary>
        </member>
        <member name="F:GCSeries.ocvdata.GlassRotation">
            <summary> 眼镜旋转. </summary>
        </member>
        <member name="F:GCSeries.ocvdata.GlassRotation_w">
            <summary> 眼镜旋转(考虑机身倾角). </summary>
        </member>
        <member name="F:GCSeries.ocvdata.PenStatus">
            <summary>笔的检测状态. </summary>
        </member>
        <member name="F:GCSeries.ocvdata.PenPosition">
            <summary> 笔坐标. </summary>
        </member>
        <member name="F:GCSeries.ocvdata.PenPosition_w">
            <summary> 笔坐标(考虑机身倾角). </summary>
        </member>
        <member name="F:GCSeries.ocvdata.PenDirection">
            <summary> 笔方向. </summary>
        </member>
        <member name="F:GCSeries.ocvdata.PenDirection_w">
            <summary> 笔方向(考虑机身倾角). </summary>
        </member>
        <member name="F:GCSeries.ocvdata.PenRoll">
            <summary> 笔的滚转角. </summary>
        </member>
        <member name="F:GCSeries.ocvdata.DevicePitch">
            <summary> 整个设备的偏转角度(未使用). </summary>
        </member>
        <member name="F:GCSeries.ocvdata.PenKey">
            <summary> 笔的按键值,0x01中键,0x02左键,0x04右键. </summary>
        </member>
        <member name="F:GCSeries.ocvdata.GyroscopeRotation">
            <summary> 陀螺仪旋转,只有x，y两轴. </summary>
        </member>
        <member name="F:GCSeries.ocvdata.slantAngle">
            <summary> 整个机子倾斜角，默认为0. </summary>
        </member>
        <member name="F:GCSeries.ocvdata.isSleep">
            <summary>是否在睡眠状态,0为正常检查,>0为睡眠状态.</summary>
        </member>
        <member name="F:GCSeries.ocvdata.fps">
            <summary> 当前处理程序的fps. </summary>
        </member>
        <member name="F:GCSeries.ocvdata.cameraDevErrorCode">
            <summary> 相机硬件错误标志 </summary>
        </member>
        <member name="F:GCSeries.ocvdata.penDevErrorCode">
            <summary> 笔硬件错误标志. </summary>
        </member>
        <member name="F:GCSeries.ocvdata.mcDevErrorCode">
            <summary> 主控硬件错误标志. </summary>
        </member>
        <member name="F:GCSeries.ocvdata.procErrorCode">
            <summary>  处理程序自己软件的错误标志. </summary>
        </member>
        <member name="F:GCSeries.ocvdata.devID">
            <summary> 设备的主板id号. </summary>
        </member>
        <member name="F:GCSeries.ocvdata.camera_c">
            <summary> 16:9摄像机的中央摄像机. </summary>
        </member>
        <member name="F:GCSeries.ocvdata.camera_l">
            <summary> 16:9摄像机的左边摄像机. </summary>
        </member>
        <member name="F:GCSeries.ocvdata.camera_r">
            <summary> 16:9摄像机的右边摄像机. </summary>
        </member>
        <member name="F:GCSeries.ocvdata.reliablePoint">
            <summary> 比较可靠的点 64个. </summary>
        </member>
        <member name="F:GCSeries.ocvdata.points">
            <summary> 最多128个跟踪点. </summary>
        </member>
        <member name="F:GCSeries.ocvdata.camRays">
            <summary> 用来调试看效果的摄像机射线. </summary>
        </member>
        <member name="F:GCSeries.ocvdata.viewPosition">
            <summary> fView相机坐标. </summary>
        </member>
        <member name="F:GCSeries.ocvdata.viewRotation">
            <summary> fView相机旋转. </summary>
        </member>
        <member name="F:GCSeries.ocvdata.iViewPosition">
            <summary> (逆)fView相机坐标. </summary>
        </member>
        <member name="F:GCSeries.ocvdata.iViewRotation">
            <summary> (逆)fView相机旋转. </summary>
        </member>
        <member name="F:GCSeries.ocvdata.next">
            <summary> 下一个. </summary>
        </member>
        <member name="M:GCSeries.OCVData.fmInit(System.Boolean)">
            -------------------------------------------------------------------------------------------------
             <summary> 初始化. </summary>
            
             <remarks> Xian Dai, 2017/5/7. </remarks>
            
             <param name="isStartServer"> (Optional)
                                          默认在服务未启动的时候启动服务,
                                          通常应该设置为true. </param>
            
             <returns> 是否初始化成功的状态,0表示成功,非0为失败. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:GCSeries.OCVData.fmClose">
            -------------------------------------------------------------------------------------------------
             <summary> 关闭系统. </summary>
            
             <remarks> Xian Dai, 2017/5/7. </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:GCSeries.OCVData.fmGetGlassStatus">
            -------------------------------------------------------------------------------------------------
             <summary> 得到眼镜状态. </summary>
            
             <remarks> Xian Dai, 2018/1/23. </remarks>
            
             <returns> 返回非零表示当前系统有检测到眼镜. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:GCSeries.OCVData.fmGetGlassPosition">
            -------------------------------------------------------------------------------------------------
             <summary> 得到眼镜坐标. </summary>
            
             <remarks> Xian Dai, 2018/1/23. </remarks>
            
             <returns> 返回眼镜的坐标. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:GCSeries.OCVData.fmGetGlassRotation">
            -------------------------------------------------------------------------------------------------
             <summary> 眼镜旋转.z轴向前 </summary>
            
             <remarks> Xian Dai, 2018/1/23. </remarks>
            
             <returns> 眼镜旋转的四元数. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:GCSeries.OCVData.fmGetPenStatus">
            -------------------------------------------------------------------------------------------------
             <summary> 笔的检测状态. </summary>
            
             <remarks> Xian Dai, 2018/1/23. </remarks>
            
             <returns> 返回非零表示当前系统有检测到笔. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:GCSeries.OCVData.fmGetPenPosition">
            -------------------------------------------------------------------------------------------------
             <summary> 笔坐标，它是笔尖的坐标. </summary>
            
             <remarks> Xian Dai, 2018/1/23. </remarks>
            
             <returns> 笔尖坐标. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:GCSeries.OCVData.fmGetPenDirection">
            -------------------------------------------------------------------------------------------------
             <summary>
             笔方向向量(笔实际上只有两点，所以在光学上无法得出三轴方向，所以这里是方向不是旋转)，
             在3D系统中可以自己结合下面的滚转角生成一个四元数旋转。
             </summary>
            
             <remarks> Xian Dai, 2018/1/23. </remarks>
            
             <returns> 笔的方向向量. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:GCSeries.OCVData.fmGetPenRoll">
            -------------------------------------------------------------------------------------------------
             <summary> 笔的滚转角，向右手旋转为正方向. </summary>
            
             <remarks> Xian Dai, 2018/1/23. </remarks>
            
             <returns> 笔的滚转角. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:GCSeries.OCVData.fmGetPenKey">
            -------------------------------------------------------------------------------------------------
             <summary> 得到笔的当前按键值状态标志,0x01中键,0x02左键,0x04右键. </summary>
            
             <remarks> Xian Dai, 2018/1/23. </remarks>
            
             <returns> 得到笔的按键状态. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:GCSeries.OCVData.fmGetSlantAngle">
            -------------------------------------------------------------------------------------------------
             <summary>
             整个一体机机身和桌面的倾斜角，当一体机机身完全垂直的时候它为0度.
             </summary>
            
             <remarks> Xian Dai, 2018/1/23. </remarks>
            
             <returns> 机身的倾斜角. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:GCSeries.OCVData.fmSetPenShake(System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>
             设置笔震动，调用此函数会让笔震动一下,目前只有mode =1的模式.连续调用这个函数可以让笔连续震动.
             </summary>
            
             <remarks> Xian Dai, 2018/1/23. </remarks>
            
             <param name="mode"> (Optional) The mode. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:GCSeries.OCVData.fmSetActiveUser">
            -------------------------------------------------------------------------------------------------
             <summary>
             标记自己是活动用户,每5秒内需要调用一次，如果超过10秒没有调用这个函数，那么后台检测系统会停止检测。需要在
             一个定时器里定时调用这个函数。
             这是因为当操作系统中没有运行一个活动的VR程序的时候，后台检测系统会关闭一些工作以减少开销,并且会关闭红外灯.
             当有VR程序标记自己是活动用户时，会马上打开红外灯并且启动检测程序
             PS:可以观察设备屏幕两侧红外灯是否亮起，知道检测程序是否开始工作。
             </summary>
            
             <remarks> Xian Dai, 2018/1/23. </remarks>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:GCSeries.OCVData.fmGetOCVDataAddr">
            -------------------------------------------------------------------------------------------------
             <summary> Gets ocv data address. </summary>
            
             <remarks> Dx, 2019/1/4. </remarks>
            
             <returns> The ocv data address. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:GCSeries.OCVData.fmSetflagVRMode(System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>
             设置屏幕VR模式的flag，0表示屏幕是非vr的正常显示模式，1表示是VR模式的LR格式画面显示。
             这个函数用以通知屏幕切换显示模式.
             </summary>
            
             <remarks> Xian Dai, 2018/1/23. </remarks>
            
             <param name="flag"> The flag. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:GCSeries.OCVData.fmSetflagVRModeOther(System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>
             设置一体机以外的其他屏幕VR模式的flag，0表示屏幕是非vr的正常显示模式，1表示是VR模式的LR格式画面显示。
             这个函数用以通知屏幕切换显示模式.
             </summary>
            
             <remarks> Xian Dai, 2018/1/23. </remarks>
            
             <param name="flag"> The flag. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:GCSeries.OCVData.fmSetflagDualScreenMode(System.Int32)">
            -------------------------------------------------------------------------------------------------
             <summary>
             设置双屏的显示模式，目前flag=1表示为扩展模式，flag=2为复制模式，flag=3为恢复上一次操作前的状态.
             </summary>
            
             <remarks> Xian Dai, 2018/3/26. </remarks>
            
             <param name="flag"> The flag. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:GCSeries.OCVData.fmGetCurDualScreenStatus">
            -------------------------------------------------------------------------------------------------
             <summary>
             得到当前的双屏的显示模式，目前flag=1表示为扩展模式，flag=2为复制模式，flag=3为恢复上一次操作前的状态.
             </summary>
            
             <remarks> Xian Dai, 2018/3/26. </remarks>
            
             <param name="flag"> The flag. </param>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:GCSeries.OCVData.fmGetIsSleep">
            -------------------------------------------------------------------------------------------------
             <summary> 一体机检测程序是否在睡眠状态,0为正常检查,大于0为睡眠状态. </summary>
            
             <remarks> Xian Dai, 2018/1/23. </remarks>
            
             <returns> The is sleep. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:GCSeries.OCVData.fmGetFps">
            -------------------------------------------------------------------------------------------------
             <summary> 当前一体机检测程序的工作帧率. </summary>
            
             <remarks>  Xian Dai, 2018/1/23. </remarks>
            
             <returns> The FPS. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:GCSeries.OCVData.fmGetCameraDevErrorCode">
            -------------------------------------------------------------------------------------------------
             <summary> 获取摄像头硬件错误标志. </summary>
            
             <remarks> Xian Dai, 2018/1/23. </remarks>
            
             <returns> 摄像头硬件错误标志 . </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:GCSeries.OCVData.fmGetPenDevErrorCode">
            -------------------------------------------------------------------------------------------------
             <summary> 获取笔硬件错误标志. </summary>
            
             <remarks> Xian Dai, 2018/1/23. </remarks>
            
             <returns> 笔硬件错误标志. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:GCSeries.OCVData.fmGetMCDevErrorCode">
            -------------------------------------------------------------------------------------------------
             <summary> 获取主控板硬件错误标志. </summary>
            
             <remarks> Xian Dai, 2018/1/23. </remarks>
            
             <returns> 主控板硬件错误标志. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:GCSeries.OCVData.fmGetProcErrorCode">
            -------------------------------------------------------------------------------------------------
             <summary> 得到软件是否发生了错误的标志. </summary>
            
             <remarks> Dx, 2018/10/30. </remarks>
            
             <returns> 处理软件自己发生了错误的标志. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="M:GCSeries.OCVData.fmGetMCDevID">
            -------------------------------------------------------------------------------------------------
             <summary> 获取主控板硬件id号. </summary>
            
             <remarks> Xian Dai, 2018/1/23. </remarks>
            
             <returns> 主控板硬件id号. </returns>
            -------------------------------------------------------------------------------------------------
        </member>
        <member name="F:GCSeries.OCVData._data">
            <summary>
            大家共用的检测数据
            </summary>
        </member>
        <member name="F:GCSeries.OCVData._pData">
            <summary>
            pOCVData对应的指针
            </summary>
        </member>
        <member name="F:GCSeries.OCVData.pOCVData">
            <summary>
            数据起始的地址.
            </summary>
        </member>
        <member name="M:GCSeries.OCVData.InitData">
            <summary>
            初始化这个数据，在Start()的时候运行一下就ok了
            </summary>
        </member>
        <member name="M:GCSeries.OCVData.UpdateOCVdata">
            <summary>
            每帧调用，应该在Update中调用
            </summary>
        </member>
        <member name="M:GCSeries.OCVData.writeU3Ddata">
            <summary>
            写u3d数据到检测程序
            </summary>
        </member>
        <member name="F:GCSeries.OCVData.updateCount">
            <summary>
            数据更新的计数
            </summary>
        </member>
    </members>
</doc>
